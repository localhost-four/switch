import { BaseManager } from './BaseManager';
import { Response } from '../types/responses/Response';
import { TrophyResponse } from '../types/responses/TrophyResponse';
import { Trophy } from '../types/models/Trophy';
/**
 * Manager responsible for managing the API methods of trophies.
 */
export declare class TrophyManager extends BaseManager {
    /**
     * Trophies returned from the API. Populated when {@link TrophyManager#fetch} is called.
     */
    fetchedTrophies: Trophy[];
    /**
     * Returns one trophy or multiple trophies.
     *
     * @param [achieved] Whether to fetch only achieved trophies.
     */
    fetch(achieved?: boolean): Promise<TrophyResponse>;
    /**
     * Returns one trophy or multiple trophies by Id.
     *
     * @param trophyIds The IDs of the trophies to fetch.
     */
    fetchById(trophyIds: number | number[]): Promise<TrophyResponse>;
    /**
     * Sets a trophy as achieved for a particular user.
     *
     * @param trophyId The ID of the trophy to add for the user.
     */
    addAchieved(trophyId: number): Promise<Response>;
    /**
     * Remove a previously achieved trophy for a particular user.
     *
     * @param trophyId The ID of the trophy to remove from the user.
     */
    removeAchieved(trophyId: number): Promise<Response>;
}
