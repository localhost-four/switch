import { BaseManager } from './BaseManager';
import { Response } from '../types/responses/Response';
import { DataStoreItemResponse } from '../types/responses/DataStoreItemResponse';
import { DataStoreOperations } from '../types/DataStoreOperations';
import { DataStoreKeysResponse } from '../types/responses/DataStoreKeysResponse';
/**
 * Manager responsible for managing the API methods of data storage.
 */
export declare class DataStoreManager extends BaseManager {
    /**
     * Returns data from the data store.
     *
     * @param key The key of the data item you'd like to fetch.
     * @param [user] Whether to fetch user data store item.
     */
    fetch(key: string, user?: boolean): Promise<DataStoreItemResponse>;
    /**
     * Sets data in the data store.
     *
     * @param key The key of the data item you'd like to set.
     * @param data The data you'd like to set.
     * @param [user] Whether to set a user data store item.
     */
    set(key: string, data: string | number, user?: boolean): Promise<Response>;
    /**
     * Updates data in the data store.
     * @param key The key of the data item you'd like to update.
     * @param value	The value you'd like to apply to the data store item.
     * @param operation The operation you'd like to perform.
     * @param [user] Whether this is a user data store item.
     */
    update(key: string, value: string | number, operation: DataStoreOperations, user?: boolean): Promise<DataStoreItemResponse>;
    /**
     * Removes data from the data store.
     *
     * @param key The key of the data item you'd like to remove.
     * @param [user] Whether to remove a user data store item.
     */
    remove(key: string, user?: boolean): Promise<Response>;
    /**
     * Returns either all the keys in the game's global data store, or all the keys in a user's data store.
     *
     * @param [user] Whether to fetch user data store item.
     * @param [pattern] The pattern to apply to the key names in the data store.
     */
    getKeys(user?: boolean, pattern?: string): Promise<DataStoreKeysResponse>;
}
