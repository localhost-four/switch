import { ClientOptions } from './types/ClientOptions';
import { UserManager } from './managers/UserManager';
import { Response } from './types/responses/Response';
import { SessionManager } from './managers/SessionManager';
import { AuthCredentials } from './types/AuthCredentials';
import { ScoreManager } from './managers/ScoreManager';
import { TrophyManager } from './managers/TrophyManager';
import { DataStoreManager } from './managers/DataStoreManager';
import { FriendsManager } from './managers/FriendsManager';
import { TimeManager } from './managers/TimeManager';
export declare class GameJolt {
    /**
     * The user authentication credentials.
     */
    authCredentials: AuthCredentials;
    /**
     * The ID of your game.
     */
    readonly gameId: number;
    /**
     * Private Key of your game (found under "Manage Achievements" on the game dashboard).
     */
    readonly privateKey: string;
    /**
     * Manager for user endpoints.
     */
    readonly users: UserManager;
    /**
     * Manager for session endpoints.
     */
    readonly sessions: SessionManager;
    /**
     * Manager for score endpoints.
     */
    readonly scores: ScoreManager;
    /**
     * Manager for trophy endpoints.
     */
    readonly trophies: TrophyManager;
    /**
     * Manager for data storage endpoints.
     */
    readonly dataStorage: DataStoreManager;
    /**
     * Manager for friend endpoints.
     */
    readonly friends: FriendsManager;
    /**
     * Manager for time endpoints.
     */
    readonly time: TimeManager;
    /**
     * @param options The options to pass to the client.
     */
    constructor(options: ClientOptions);
    /**
     * Login to Game Jolt with username and token.
     *
     * @param credentials The user credentials for authentication.
     */
    login(credentials: AuthCredentials): Promise<Response>;
    /**
     * Logout the current acive user.
     */
    logout(): Promise<Response>;
}
